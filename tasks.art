
tasks: #[]

routine: $[action :block][
    function [] action
]

task: $[name :literal :string action :block][
    ; Requirements

    requires: (attr 'requires) ?? []
    defered: (attr 'defer) ?? []
    ensure -> block? requires
    ensure -> block? defered

    ; appends the task
    tasks\[name]: #[
        requires: requires
        defers: defered
        action: action
    ]

]

executeTask: $[target :string :literal][

    exec: $[command :string :literal params :string :block][

        if literal? command -> command: to :string command
        if string? params -> params: @[params]

        print execute.args: params command
    ]
    alias {|>} 'exec

    targetTask: tasks\[target]
    requires: targetTask\requires
    defered: targetTask\defers
    action: targetTask\action 

    loop requires 'fn [
        fn: (var fn)
        call fn []
    ]

    print ~"Executing |target|..."
    do action

    loop defered 'fn [
        fn: (var fn)
        call fn []
    ]

    print ~"Done!"
]